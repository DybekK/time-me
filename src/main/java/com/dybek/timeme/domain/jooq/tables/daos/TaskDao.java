/*
 * This file is generated by jOOQ.
 */
package com.dybek.timeme.domain.jooq.tables.daos;


import com.dybek.timeme.domain.jooq.tables.Task;
import com.dybek.timeme.domain.jooq.tables.records.TaskRecord;

import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDao extends DAOImpl<TaskRecord, com.dybek.timeme.domain.jooq.tables.pojos.Task, UUID> {

    /**
     * Create a new TaskDao without any configuration
     */
    public TaskDao() {
        super(Task.TASK, com.dybek.timeme.domain.jooq.tables.pojos.Task.class);
    }

    /**
     * Create a new TaskDao with an attached configuration
     */
    public TaskDao(Configuration configuration) {
        super(Task.TASK, com.dybek.timeme.domain.jooq.tables.pojos.Task.class, configuration);
    }

    @Override
    public UUID getId(com.dybek.timeme.domain.jooq.tables.pojos.Task object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Task.TASK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchById(UUID... values) {
        return fetch(Task.TASK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dybek.timeme.domain.jooq.tables.pojos.Task fetchOneById(UUID value) {
        return fetchOne(Task.TASK.ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchByTitle(String... values) {
        return fetch(Task.TASK.TITLE, values);
    }

    /**
     * Fetch records that have <code>workspace_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchRangeOfWorkspaceUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Task.TASK.WORKSPACE_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workspace_user_id IN (values)</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchByWorkspaceUserId(UUID... values) {
        return fetch(Task.TASK.WORKSPACE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>workspace_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchRangeOfWorkspaceId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Task.TASK.WORKSPACE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workspace_id IN (values)</code>
     */
    public List<com.dybek.timeme.domain.jooq.tables.pojos.Task> fetchByWorkspaceId(UUID... values) {
        return fetch(Task.TASK.WORKSPACE_ID, values);
    }
}
